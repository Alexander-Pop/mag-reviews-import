<?php
/*
 * ekomi.php
 * This script calls the eKomi API and adds new reviews into the db
 */



class Katai_Ekomi_Model_Ekomicoupon extends Mage_Core_Model_Abstract {
    private $interfaceId = '50138';
    private $interfacePass = '9a15bc2bc488bb1800ecb67cb';


    public function process() {
        if ( !Mage::getStoreConfigFlag('Katai_Ekomi/ekomi/is_enabled') ) {
            return $this;
        }


        //echo 'testing 1';
        $this->interfaceId = Mage::getStoreConfig('Katai_Ekomi/ekomi/interface_id');
        $this->interfacePass = Mage::getStoreConfig('Katai_Ekomi/ekomi/interface_pass');


        return $this->check_new_feedback($this->interfaceId, $this->interfacePass);
    }


    public function check_new_feedback($interfaceId, $interfacePass){

        $yesterday = time() - (1 * 24 * 60 * 60);

        // get coupon code
        $couponCode = $this->getCouponCode(264); // ID of coupon in question

        $templateId = 'FR - eKomi Review Voucher';
        $emailTemplate = Mage::getModel('core/email_template')->loadByCode($templateId);

        $emailTemplate->setSenderEmail('info@ideecadeau.fr');
        $emailTemplate->setSenderName('ideecadeau.fr');

        $url = "http://api.ekomi.de/get_feedback.php?interface_id=$interfaceId&interface_pw=$interfacePass&type=csv";
        if (($handle = fopen($url, "r")) !== FALSE) {
            while (($data = fgetcsv($handle, 2048, ",")) !== FALSE) {

                // Send only last 24 hours
                if ($data[0] < $yesterday) continue;

                // get customer email
                $incrementId = $data[1];
                $orderId = Mage::getModel('sales/order')->load($incrementId, 'increment_id')->getId();

                if ($orderId) {
                    $email = Mage::getModel('sales/order')->load($orderId)->getCustomerEmail();
                }

                if (!$email || $email === 'endkunden@geschenkidee.de') continue;
                //echo 'order: '.$incrementId.' orderId: '.$orderId.' email: '.$email.' coupon: '.$couponCode.'<br>';

                // prepare variables and send email
                $vars = array('voucher_code' => $couponCode);
                $emailTemplate->send($email, '', $vars);

                unset($orderId, $email);
            }
            fclose($handle);
            return true;
        }
        return false;
    }


    protected function getCouponCode ($ruleId) {
        return Mage::getModel('salesrule/rule')->load($ruleId)->acquireCoupon()->getCode();
    }


    // this can be used only if the shopping rule is set to autogeneration in the Magento admin panel
    protected function getAutoGeneratedCouponCode($ruleId, $dash=5, $length=12) {

        $rule = Mage::getModel('salesrule/rule')->load($ruleId);

        // Define a coupon code generator model instance
        // Look at Mage_SalesRule_Model_Coupon_Massgenerator for options
        $generator = Mage::getModel('salesrule/coupon_massgenerator');

        // alphanumeric format
        $generator->setFormat( Mage_SalesRule_Helper_Coupon::COUPON_FORMAT_ALPHANUMERIC );
        // dash every 5 characters
        $generator->setDash( !empty($parameters['dash_every_x_characters'])? (int) $parameters['dash_every_x_characters'] : $dash);
        // 12 character lenght
        $generator->setLength( !empty($parameters['length'])? (int) $parameters['length'] : $length);

        // Set the generator, and coupon type so it's able to generate
        $rule->setCouponCodeGenerator($generator);
        $rule->setCouponType( Mage_SalesRule_Model_Rule::COUPON_TYPE_AUTO );

        // get coupon code
        return $rule->acquireCoupon()->getCode();
    }

}